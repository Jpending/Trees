{"version":3,"sources":["FadeIn.js","App.js","serviceWorker.js","index.js"],"names":["FadeIn","state","maxIsVisible","count","React","Children","this","props","children","i","interval","setInterval","clearInterval","setState","delay","transitionDuration","WrapperTag","wrapperTag","ChildTag","childTag","className","map","child","key","childClassName","style","transition","transform","opacity","Component","App","currVal","valArr","useArr","setArr","bool","whichArr","handleSubmit","document","getElementById","reset","treeAddVals","func","forEach","val","handleSwitchArr","renderSetArr","onClick","e","selectFromArr","id","arrSort","arr","sort","a","b","binarySearch","array","value","start","end","undefined","length","index","Math","floor","item","console","log","handleLinearSubmit","handleBinarySubmit","target","Form","InputGroup","name","onChange","handleChangeVal","FormControl","placeholder","Append","Button","variant","size","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.606cdd7b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nexport default class FadeIn extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state={\r\n      maxIsVisible: 0\r\n    };\r\n  }\r\n\r\n  get delay() {\r\n    return this.props.delay||50;\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return this.props.transitionDuration||400;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const count=React.Children.count(this.props.children);\r\n    let i=0;\r\n    this.interval=setInterval(() => {\r\n      i++;\r\n      if(i>count) clearInterval(this.interval);\r\n\r\n      this.setState({maxIsVisible: i});\r\n    }, this.delay);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const transitionDuration=this.transitionDuration;\r\n    const WrapperTag=this.props.wrapperTag||\"div\";\r\n    const ChildTag=this.props.childTag||\"div\";\r\n\r\n    return (\r\n      <WrapperTag className={this.props.className} >\r\n        {\r\n          React.Children.map(this.props.children, (child, i) => {\r\n            return (\r\n              <ChildTag key={(i*100)+'c'}\r\n                className={this.props.childClassName}\r\n                style={{\r\n                  'maxWidth': `100%`,\r\n                  transition: `opacity ${transitionDuration}ms, transform ${transitionDuration}ms`,\r\n                  transform: `translateY(${this.state.maxIsVisible>i? 0:20}px)`,\r\n                  opacity: this.state.maxIsVisible>i? 1:0\r\n                }}\r\n              >\r\n                {child}\r\n              </ChildTag>\r\n            );\r\n          })\r\n        }\r\n      </WrapperTag>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable eqeqeq */\nimport React from 'react';\nimport {Form, FormControl, InputGroup, Button} from 'react-bootstrap'\nimport FadeIn from './FadeIn.js'\nclass App extends React.Component {\n  state={\n    currVal: null,\n    valArr: [],\n    useArr: [],\n    setArr: [89, 30, 25, 32, 72, 70, 51, 42, 25, 24, 53, 55, 78, 50, 13, 40, 48, 32, 26, 2, 14, 33, 45, 72, 56, 44, 21, 88, 27, 68, 15, 62, 93, 98, 73, 28, 16, 46, 87, 28, 65, 38, 67, 16, 85, 63, 23, 69, 64, 91, 9, 70, 81, 27, 97, 82, 6, 88, 3, 7, 46, 13, 11, 64, 76, 31, 26, 38, 28, 13, 17, 69, 90, 1, 6, 7, 64, 43, 9, 73, 80, 98, 46, 27, 22, 87, 49, 83, 6, 39, 42, 51, 54, 84, 34, 53, 78, 40, 14, 5,\n    ],\n    count: null,\n    bool: '',\n    whichArr: 'mine',\n  }\n\n  handleChangeVal(e) {\n    console.log('I run')\n    this.setState({currVal: e.target.value})\n  }\n\n  handleSubmit=() => {\n    let currVal=this.state.currVal;\n    this.setState({valArr: [...this.state.valArr, currVal]})\n    document.getElementById(\"userVal\").reset();\n\n  }\n\n  selectFromArr(e) {\n    let value=e.target.id;\n    this.setState({currVal: value})\n  }\n\n  treeAddVals=(func) => {\n    this.state.valArr.forEach(val => {func(val)})\n  }\n  handleSwitchArr=() => {\n    this.state.whichArr==='mine'? this.setState({useArr: this.state.setArr, whichArr: 'yours'}):this.setState({useArr: this.state.valArr, whichArr: 'mine'});\n  }\n  renderSetArr=() => {\n    return this.state.useArr.map((val, i) =>\n      <FadeIn delay={100*i} transitionDuration={10*i} key={(i*100)+'c'}><h4 className=\"flex flex-1 font-bold text-xl text-center justify-center m-1 p-4 px-4 w-1/8 bg-blue-500 rounded-full hover:bg-yellow-300 transition duration-100 ease-in-out transform hover:-translate-y-1 hover:scale-125\" onClick={(e) => this.selectFromArr(e)} id={val} key={i+1}>\n        {val}</h4></FadeIn>)\n  }\n  arrSort=(arr) => {\n    let newArr=arr.sort((a, b) => {return a-b});\n    return newArr;\n  }\n\n  binarySearch=(array, value, start, end, count) => {\n    count=count===undefined? 1:count+1;\n    start=start===undefined? 0:start;\n\n    end=end===undefined? array.length:end;\n\n    if(start>end) {\n      return this.setState({bool: 'false', count: count});\n    }\n\n    const index=Math.floor((start+end)/2);\n    const item=array[index];\n\n    console.log(start, end, item, index);\n    if(item==value) {\n      this.setState({count: count, bool: 'true'})\n      return index;\n    }\n    else if(item<value) {\n\n      return this.binarySearch(array, value, index+1, end, count);\n    }\n    else if(item>value) {\n      return this.binarySearch(array, value, start, index-1, count);\n    }\n  };\n\n  handleLinearSubmit=() => {\n    this.setState({count: null})\n    const {valArr}=this.state;\n    const {currVal}=this.state;\n    let count=0;\n    for(let i=0;i<valArr.length;i++) {\n      count++;\n      if(valArr[i]==currVal) {\n        this.setState({count: count})\n        this.setState({bool: 'true'})\n        return;\n      }\n    }\n    this.setState({count: count})\n    this.setState({bool: 'false'})\n    return;\n\n  }\n\n  handleBinarySubmit=() => {\n    this.binarySearch(this.arrSort(this.state.setArr), this.state.currVal)\n  }\n\n\n  render() {\n    return (\n      <div className=\"App text-center align-items-center p-4 font-mono\">\n        <header className=\"App-header mb-8\">\n          <h1 className=\"text-5xl \">Binary Search Trees</h1>\n        </header>\n        {this.state.count&&<h1 className=\"text-blue-600\">Ran search {this.state.count} times</h1>}\n        <h1>{this.state.bool}</h1>\n        <Form id=\"userVal\">\n          <InputGroup className=\"mb-3 border\" name=\"userVal\" onChange={(e) => this.handleChangeVal(e)}>\n            <FormControl\n              placeholder=\"Enter value here\"\n            />\n            <InputGroup.Append>\n            </InputGroup.Append>\n          </InputGroup>\n          <Button className=\"m-2 px-2 border rounded shadow\" variant=\"primary\" size=\"lg\" onClick={this.handleSubmit} >Submit</Button>\n          <Button className=\"m-2 px-2 border rounded shadow\" variant=\"primary\" size=\"lg \" onClick={this.handleLinearSubmit}>Linear</Button>\n          <Button className=\"m-2 px-2 border rounded shadow\" variant=\"primary\" size=\"lg\" onClick={this.handleBinarySubmit}>Binary</Button>\n        </Form>{' '}\n\n\n        <div className=\"align-center px-20 m-8 rounded-full border-transparent border-dotted border-8 bg-gradient-to-b from-transparent via-teal-200 to-transparent\">\n          <h2>Current Array</h2>\n          <Button onClick={this.handleSwitchArr} className=\"m-2 px-2 border rounded shadow\">Switch Array</Button>\n          <div className=\"flex flex-row flex-wrap max-w-md \">\n\n            {this.renderSetArr()}\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <App key={89998329} />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}